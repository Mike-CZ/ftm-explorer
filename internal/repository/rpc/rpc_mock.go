// Code generated by MockGen. DO NOT EDIT.
// Source: rpc.go

// Package rpc is a generated GoMock package.
package rpc

import (
	types "ftm-explorer/internal/types"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRpc is a mock of Rpc interface.
type MockRpc struct {
	ctrl     *gomock.Controller
	recorder *MockRpcMockRecorder
}

// MockRpcMockRecorder is the mock recorder for MockRpc.
type MockRpcMockRecorder struct {
	mock *MockRpc
}

// NewMockRpc creates a new mock instance.
func NewMockRpc(ctrl *gomock.Controller) *MockRpc {
	mock := &MockRpc{ctrl: ctrl}
	mock.recorder = &MockRpcMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRpc) EXPECT() *MockRpcMockRecorder {
	return m.recorder
}

// BlockByNumber mocks base method.
func (m *MockRpc) BlockByNumber(number uint64) (*types.Block, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BlockByNumber", number)
	ret0, _ := ret[0].(*types.Block)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BlockByNumber indicates an expected call of BlockByNumber.
func (mr *MockRpcMockRecorder) BlockByNumber(number interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BlockByNumber", reflect.TypeOf((*MockRpc)(nil).BlockByNumber), number)
}
