# Root schema definition
schema {
    query: Query
}

# Entry points for querying the API
type Query {
    # State represents the current state of the blockchain and network.
    state: CurrentState!

    # Get transaction information for given transaction hash.
    transaction(hash:Bytes32!):Transaction

    # Get block information by number.
    block(number:Long!):Block

    # Get recent observed blocks
    recentBlocks(limit:Int!):[Block!]!

    # Get current block height
    currentBlockHeight:Long

    # Get total number of accounts
    numberOfAccounts:Int!

    # Get total number of transactions
    numberOfTransactions:Long!

    # Get total number of validators
    numberOfValidators:Int!

    # Get disk size per 100M transactions in bytes
    diskSizePer100MTxs:Long!

    # Get time to finality in seconds (rounded to 2 decimal places)
    timeToFinality:Float!

    # Get block aggregated data by timestamp
    # parameters:
    #   subject: the subject of the aggregation - value of AggSubject enum
    #   resolution: the resolution of the aggregation - value of AggResolution enum
    #   ticks: the number of ticks to return
    #   endTime: the end timestamp of the aggregation, if not specified, last block's timestamp is used
    blockTimestampAggregations(subject: AggSubject!, resolution: AggResolution!, ticks:Int!, endTime:Int):[Tick!]!
}